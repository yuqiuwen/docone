"use strict";(self.webpackChunkdocone=self.webpackChunkdocone||[]).push([[5908],{26519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=t(85893),a=t(11151);const s={title:"\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u5177Paramiko & Fabric",authors:"Qiuwen",description:"\u7531\u4e8e\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\u8fd9\u4e24\u4e2a\u5e93\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e0a\u7528\u7684fabric\u6765\u5b9e\u73b0\u73af\u5883\u90e8\u7f72\u3001\u9884\u68c0\u3001\u6570\u636e\u4e0a\u4f20\u4e0b\u53d1\u7b49\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u672c\u6587\u91cd\u70b9\u4ecb\u7ecdFabric\u7684\u4f7f\u7528\uff08fabric2\u7248\u672c\uff09\u3002",keywords:["paramiko","fabric","devops","python"],tags:["Paramiko","Fabric","DevOps","Python"],date:new Date("2022-10-30T14:50:39.000Z")},o=void 0,l={permalink:"/docone/blog/2022/10/30/paramiko&fabric",source:"@site/blog/2022-10-30-paramiko&fabric.md",title:"\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u5177Paramiko & Fabric",description:"\u7531\u4e8e\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\u8fd9\u4e24\u4e2a\u5e93\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e0a\u7528\u7684fabric\u6765\u5b9e\u73b0\u73af\u5883\u90e8\u7f72\u3001\u9884\u68c0\u3001\u6570\u636e\u4e0a\u4f20\u4e0b\u53d1\u7b49\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u672c\u6587\u91cd\u70b9\u4ecb\u7ecdFabric\u7684\u4f7f\u7528\uff08fabric2\u7248\u672c\uff09\u3002",date:"2022-10-30T14:50:39.000Z",formattedDate:"October 30, 2022",tags:[{label:"Paramiko",permalink:"/docone/blog/tags/paramiko"},{label:"Fabric",permalink:"/docone/blog/tags/fabric"},{label:"DevOps",permalink:"/docone/blog/tags/dev-ops"},{label:"Python",permalink:"/docone/blog/tags/python"}],readingTime:22.08,hasTruncateMarker:!1,authors:[{name:"Qiuwen",title:"FullStack Engineer @ Facebook",url:"https://github.com/yuqiuwen",key:"Qiuwen"}],frontMatter:{title:"\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u5177Paramiko & Fabric",authors:"Qiuwen",description:"\u7531\u4e8e\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\u8fd9\u4e24\u4e2a\u5e93\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e0a\u7528\u7684fabric\u6765\u5b9e\u73b0\u73af\u5883\u90e8\u7f72\u3001\u9884\u68c0\u3001\u6570\u636e\u4e0a\u4f20\u4e0b\u53d1\u7b49\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u672c\u6587\u91cd\u70b9\u4ecb\u7ecdFabric\u7684\u4f7f\u7528\uff08fabric2\u7248\u672c\uff09\u3002",keywords:["paramiko","fabric","devops","python"],tags:["Paramiko","Fabric","DevOps","Python"],date:"2022-10-30T14:50:39.000Z"},unlisted:!1,prevItem:{title:"Design patterns",permalink:"/docone/blog/2022/11/06/\u8bbe\u8ba1\u6a21\u5f0f"},nextItem:{title:"Linux Commands",permalink:"/docone/blog/2022/10/27/Linux commands/Linux\u547d\u4ee4"}},i={authorsImageUrls:[void 0]},p=[{value:"paramiko",id:"paramiko",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:3},{value:"SSHClient",id:"sshclient",level:3},{value:"\u8fde\u63a5",id:"\u8fde\u63a5",level:4},{value:"\u6267\u884cSSH\u547d\u4ee4",id:"\u6267\u884cssh\u547d\u4ee4",level:4},{value:"\u5173\u95ed\u8fde\u63a5",id:"\u5173\u95ed\u8fde\u63a5",level:4},{value:"SFTPClient",id:"sftpclient",level:3},{value:"\u521b\u5efaSFTP\u5ba2\u6237\u7aef\u901a\u9053",id:"\u521b\u5efasftp\u5ba2\u6237\u7aef\u901a\u9053",level:4},{value:"\u5e38\u7528\u64cd\u4f5c",id:"\u5e38\u7528\u64cd\u4f5c",level:4},{value:"\u5173\u95ed",id:"\u5173\u95ed",level:4},{value:"\u5c01\u88c5",id:"\u5c01\u88c5",level:3},{value:"fabric",id:"fabric",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5-1",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:3},{value:"\u8fde\u63a5",id:"\u8fde\u63a5-1",level:4},{value:"\u6267\u884c\u4ea4\u4e92\u5f0f\u547d\u4ee4",id:"\u6267\u884c\u4ea4\u4e92\u5f0f\u547d\u4ee4",level:4},{value:"\u6267\u884c\u672c\u5730\u547d\u4ee4",id:"\u6267\u884c\u672c\u5730\u547d\u4ee4",level:4},{value:"\u64cd\u4f5c\u591a\u53f0\u673a\u5668",id:"\u64cd\u4f5c\u591a\u53f0\u673a\u5668",level:4},{value:"\u4e0a\u4f20\u6587\u4ef6",id:"\u4e0a\u4f20\u6587\u4ef6",level:4},{value:"\u4e0b\u8f7d\u6587\u4ef6",id:"\u4e0b\u8f7d\u6587\u4ef6",level:4},{value:"fab\u547d\u4ee4",id:"fab\u547d\u4ee4",level:4},{value:"\u5c01\u88c5",id:"\u5c01\u88c5-1",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"\u7531\u4e8e\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\u8fd9\u4e24\u4e2a\u5e93\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e0a\u7528\u7684fabric\u6765\u5b9e\u73b0\u73af\u5883\u90e8\u7f72\u3001\u9884\u68c0\u3001\u6570\u636e\u4e0a\u4f20\u4e0b\u53d1\u7b49\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u672c\u6587\u91cd\u70b9\u4ecb\u7ecdFabric\u7684\u4f7f\u7528\uff08fabric2\u7248\u672c\uff09\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"paramiko",children:"paramiko"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["paramiko\u662f\u4f7f\u7528SSHv2\u534f\u8bae\u7684\u4e09\u65b9\u5e93\uff0c\u63d0\u4f9b\u4e86\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u529f\u80fd\u3002",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"https://docs.paramiko.org/en/stable/",children:"Welcome to Paramiko\u2019s documentation! \u2014 Paramiko documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pip install paramiko\n"})}),"\n",(0,r.jsx)(n.p,{children:"paramiko\u4e2d\u7684\u51e0\u4e2a\u91cd\u8981\u7ec4\u4ef6\uff1a"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SSHClient"}),"\uff1assh\u670d\u52a1\u5668\u4f1a\u8bdd\u7684\u9ad8\u7ea7\u5c01\u88c5\uff0c\u5c01\u88c5\u4e86",(0,r.jsx)(n.code,{children:"Transport"}),",\xa0",(0,r.jsx)(n.code,{children:"Channel"}),", and\xa0",(0,r.jsx)(n.code,{children:"SFTPClient"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"SFTPClient"}),"\uff1a\u57fa\u4e8e\u4e00\u4e2a\u5df2\u8fde\u901a\u7684Transport\u6253\u5f00\u4e00\u4e2asftp\u4f1a\u8bdd\uff0c\u53ef\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\uff08\u4e0a\u4f20\u4e0b\u8f7d\u7b49\uff09"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Channel"}),"\uff1a\u4e00\u79cdssh\u4f20\u8f93\u7684\u5b89\u5168\u901a\u9053\uff0c\u7c7b\u4f3csocket",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"Transport"}),"\uff1a\u4e00\u79cd\u534f\u5546\u52a0\u5bc6\u7684\u4f1a\u8bdd\uff0c\u4f1a\u521b\u5efatunnels\u901a\u9053\u6d41\uff0c\u79f0\u4e3achannels\u3002\u591a\u4e2achannels\u53ef\u4ee5\u5728\u5355\u4e2a\u4f1a\u8bdd\u4e2d\u591a\u8def\u590d\u7528"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sshclient",children:"SSHClient"}),"\n",(0,r.jsx)(n.h4,{id:"\u8fde\u63a5",children:"\u8fde\u63a5"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u901a\u8fc7\u5bc6\u94a5\u8fde\u63a5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5b9e\u4f8b\u5316",(0,r.jsx)(n.code,{children:"SSHClient"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u521b\u5efa\u4e00\u4e2a",(0,r.jsx)(n.code,{children:"Transport"}),"\u52a0\u5bc6\u901a\u9053"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\u901a\u8fc7\u5bc6\u7801\u8fde\u63a5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5b9e\u4f8b\u5316",(0,r.jsx)(n.code,{children:"SSHClient"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u521b\u5efa\u4e00\u4e2a",(0,r.jsx)(n.code,{children:"Transport"}),"\u52a0\u5bc6\u901a\u9053"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'"""\u5bc6\u94a5\u8fde\u63a5(\u901a\u8fc7Transport\u8fde\u63a5)"""\nprivate = paramiko.RSAKey.from_private_key_file(\'/xxx/xxx\')\ntransport = paramiko.Transport((host, port))\ntransport.connect(username=user, pkey=private)\n\n"""\u5bc6\u94a5\u8fde\u63a5(\u901a\u8fc7SSHClient\u8fde\u63a5)"""\nprivate = paramiko.RSAKey.from_private_key_file(\'/xxx/xxx\')\nssh_client\xa0= paramiko.SSHClient()\nssh_client.connect(hostname=host,port=22,username=user,pkey=private)\n\n"""\u5bc6\u7801\u8fde\u63a5(\u901a\u8fc7Transport\u8fde\u63a5)"""\ntransport = paramiko.Transport((host, port))\ntransport.connect(username=user, password=password)\n\n"""\u5bc6\u7801\u8fde\u63a5(\u901a\u8fc7SSHClient\u8fde\u63a5)"""\nssh_client\xa0= paramiko.SSHClient()\nssh_client.connect(hostname=host,port=22,username=user,password=password)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u6267\u884cssh\u547d\u4ee4",children:"\u6267\u884cSSH\u547d\u4ee4"}),"\n",(0,r.jsxs)(n.p,{children:["\u901a\u8fc7",(0,r.jsx)(n.code,{children:"exec_command()"}),"\u65b9\u6cd5\u6253\u5f00\u4e00\u4e2achannel\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u4f7f\u7528ssh\u5ba2\u6237\u7aef\u5de5\u5177\u6267\u884c\u3002",(0,r.jsx)(n.br,{}),"\n\u82e5\u8981\u6267\u884c\u591a\u4e2a\u547d\u4ee4\u53ef\u4ee5\u901a\u8fc7 ",(0,r.jsx)(n.code,{children:"&&"}),"\u8fde\u63a5\uff0c\u6216\u8005for\u5faa\u73af\u8c03\u7528",(0,r.jsx)(n.code,{children:"exec_command()"}),"\uff0c\u8fd9\u5c06\u4f1a\u6253\u5f00\u591a\u4e2achannel\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'stdin, stdout, stderr\xa0= ssh_client.exec_command("rm -i test1.txt && cd /home")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u4e00\u6b21\u6027\u8fd4\u56destdout\u548cstderr\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7",(0,r.jsx)(n.code,{children:"stdout.channel.recv_exit_status()"}),"\u83b7\u53d6\u6267\u884c\u7ed3\u679c\uff0c\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u963b\u585e\u65b9\u6cd5\uff0c\u5982\u679c\u60f3\u5b9e\u65f6\u83b7\u53d6\u65e5\u5fd7\u8f93\u51fa\u53ef\u4ee5\u5c01\u88c5\u4e00\u4e0b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def exec_cmd(ssh_client, commands, f):\n    """\n    :param commands: \u5f85\u6267\u884c\u547d\u4ee4\u5217\u8868\n    :param f: \u6587\u4ef6\u5bf9\u8c61\n    :return: \u6267\u884c\u72b6\u6001\n    """\n    status = []\n    for cmd in commands:\n        stdin, stdout, stderr = ssh_client.exec_command(cmd)\n        f.write(f"start run command: {cmd}\\n")\n        while True:\n            err, out = stderr.readline().strip(), stdout.readline().strip()\n            if not (out or err):\n                break\n            if out:\n                f.write(out + "\\n")\n            if err:\n                f.write(err + "\\n")\n        status.append(stdout.channel.recv_exit_status())\n    return status\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u5173\u95ed\u8fde\u63a5",children:"\u5173\u95ed\u8fde\u63a5"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ssh_client.close()"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"transport.close()"})]}),"\n",(0,r.jsx)(n.h3,{id:"sftpclient",children:"SFTPClient"}),"\n",(0,r.jsx)(n.h4,{id:"\u521b\u5efasftp\u5ba2\u6237\u7aef\u901a\u9053",children:"\u521b\u5efaSFTP\u5ba2\u6237\u7aef\u901a\u9053"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"transport = paramiko.Transport((host, port))\ntransport.connect(username=user, password=password)\n# \u57fa\u4e8e\u5df2\u8fde\u901a\u7684transport\u521b\u5efa\u4e00\u4e2aSFTP\u5ba2\u6237\u7aefchannel\n# sftp = paramiko.SFTPClient.from_transport(transport)\nsftp = transport.open_sftp_client()\n\n# \u6216\u8005\u901a\u8fc7SSHClient\u521b\u5efa\nssh_client = paramiko.SSHClient()\nssh_client._transport = transport\nsftp = ssh_client.open_sftp()\n\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u5e38\u7528\u64cd\u4f5c",children:"\u5e38\u7528\u64cd\u4f5c"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"listdir(path)"}),"\uff1a\u904d\u5386\u8fdc\u7a0b\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u76ee\u5f55\uff08\u53ea\u80fd\u904d\u5386\u4e00\u7ea7\u76ee\u5f55\u548c\u6587\u4ef6\uff09",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"listdir_attr(path)"}),"\uff1a\u904d\u5386\u8fdc\u7a0b\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u76ee\u5f55\uff0c\u5e76\u4e14\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u5c5e\u6027",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"remove(path)"}),"\uff1a\u5220\u9664\u6587\u4ef6",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"rmdir(path)"}),"\uff1a\u5220\u9664\u76ee\u5f55",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"mkdir(path)"}),"\uff1a\u521b\u5efa\u76ee\u5f55",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"stat(path)"}),"\uff1a\u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\u4fe1\u606f\uff08\u82e5\u4e3a\u8f6f\u94fe\u63a5\u6587\u4ef6\uff0c\u83b7\u53d6\u7684\u662f\u6307\u5411\u7684\u6e90\u6587\u4ef6\uff09",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"lstat(path)"}),"\uff1a\u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\u4fe1\u606f\uff08\u82e5\u4e3a\u8f6f\u94fe\u63a5\u6587\u4ef6\uff0c\u83b7\u53d6\u7684\u662f\u81ea\u8eab\u6587\u4ef6\uff09",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"get(remotepath, localpath)"}),"\uff1a\u4e0b\u8f7d",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"put(localpath, remotepath)"}),"\uff1a\u4e0a\u4f20"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u68c0\u67e5\u8fdc\u7a0b\u6587\u4ef6\u662f\u5426\u5b58\u5728"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def normpath(path):\n    """\n    \u7531\u4e8ewindows\u548clinux\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\uff0c\u8def\u5f84\u683c\u5f0f\u4f1a\u51fa\u73b0\u4e0d\u7edf\u4e00\u7684\u60c5\u51b5\uff0c\u53cd\u659c\u6760\u4e0d\u5904\u7406\u7684\u8bdd\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\n    \u66ff\u6362windows\u8def\u5f84\u4e2d\u7684\\\n    :param path:\n    :return:\n    """\n    if isinstance(path, Path):\n        path = str(path)\n    return path.replace(\'\\\\\', \'/\')\n    \n\ndef check_remote_path(remote_path, is_mkdir=False):\n    """\n    \u5224\u65ad\u76ee\u6807\u673a\u5668\u8def\u5f84\u662f\u5426\u5b58\u5728\n    :param remote_path:\n    :param is_mkdir: \u82e5\u4e3aTrue\uff0c\u5219\u4f1a\u521b\u5efa\u6b64\u8def\u5f84\n    :return:\n    """\n    remote_path = normpath(remote_path)\n    try:\n        sftp.lstat(remote_path)\n        return True\n    except FileNotFoundError:\n        if is_mkdir:\n            sftp.mkdir(remote_path)\n        else:\n            return False\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u5224\u65ad\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def remote_path_isdir(remote_path):\n    """\n    \u68c0\u67e5\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55\n    :param remote_path:\n    :return:\n    """\n    attr = sftp.lstat(normpath(remote_path))\n    return stat.S_ISDIR(attr.st_mode)\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u4e0a\u4f20"})}),"\n",(0,r.jsx)(n.p,{children:"\u6ce8\u610f\uff1a\u8fdc\u7a0b\u76ee\u5f55\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u4f1a\u62a5\u9519"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def get(remote_path, local_path):\n    """\n    \u4e0b\u8f7d\u6587\u4ef6\u6216\u76ee\u5f55\n    :param remote_path: \u76ee\u6807\u673a\u5668\u8def\u5f84\uff08\u6ce8\u610f\u8def\u5f84\u53cd\u659c\u6760\u95ee\u9898\u4f1a\u62a5\u9519\uff09\n    :param local_path:  \u672c\u5730\u8def\u5f84\n    :return:\n    """\n    # \u5224\u65ad\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u5b58\u5728\n    if not check_remote_path(remote_path):\n        return False\n\n    local_path, remote_path = Path(local_path), Path(remote_path)\n    def find_files(remote_path, local_path):\n        for sftp_attr in sftp.listdir_attr(normpath(remote_path)):\n            filename = sftp_attr.filename\n            if filename.startswith(\'.\'):    # \u8fc7\u6ee4\u9690\u85cf\u6587\u4ef6\n                continue\n\n            local_dir, remote_dir = local_path.joinpath(filename), remote_path.joinpath(filename)\n            # \u82e5\u4e3a\u76ee\u5f55\uff0c\u5219\u9012\u5f52\u8c03\u7528\n            if stat.S_ISDIR(sftp_attr.st_mode):     # st_mode\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u8fd8\u662f\u6587\u4ef6\uff09\n                local_dir.mkdir(parents=True, exist_ok=True)  # parents\u4e3aTrue\u652f\u6301\u591a\u7ea7\u521b\u5efa\uff0cexist_ok \u5b58\u5728\u5c31\u4e0d\u521b\u5efa\n                find_files(remote_dir, local_dir)\n            else:\n                local_dir.parent.mkdir(parents=True, exist_ok=True)\n                sftp.get(normpath(remote_dir), normpath(local_dir))\n                \n    # \u4e0b\u8f7d\u76ee\u5f55\n    if remote_path_isdir(remote_path):\n        find_files(remote_path, local_path)\n    # \u4e0b\u8f7d\u5355\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u672c\u5730\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4e3a\u8fdc\u7a0b\u8def\u5f84\u4e2d\u7684\u540d\u5b57\n    else:\n        if local_path.is_dir():\n            local_path.mkdir(parents=True, exist_ok=True)\n            local_path = local_path.joinpath(remote_path.name)\n        else:\n            local_path.parent.mkdir(parents=True, exist_ok=True)\n        sftp.get(normpath(remote_path), normpath(local_path))\n\n    return True\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u4e0b\u8f7d"})}),"\n",(0,r.jsx)(n.p,{children:"\u6ce8\u610f\uff1a\u672c\u5730\u76ee\u5f55\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u4f1a\u62a5\u9519"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def put(local_path, remote_path):\n\n    local_path, remote_path = Path(local_path), Path(remote_path)\n\n    if local_path.is_dir():\n        for path in local_path.rglob('[!.]*'):\n            # \u62fc\u63a5\u8fdc\u7a0b\u8def\u5f84\uff0crelative_to\u83b7\u53d6\u76f8\u5bf9\u8def\u5f84\n            remote = remote_path.joinpath(path.relative_to(local_path))\n\n            if path.is_file():\n                check_remote_path(remote.parent, is_mkdir=True)   # \u76ee\u6807\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u6b64\u8def\u5f84\u9700\u8981\u521b\u5efa\n                sftp.put(normpath(path), normpath(remote))   \n\n    # \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n    else:\n        check_remote_path(remote_path.parent, is_mkdir=True)\n        if remote_path_isdir(remote_path):     # \u82e5\u8fdc\u7a0b\u8def\u5f84\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c31\u5c06\u672c\u5730\u6587\u4ef6\u540d\u4f5c\u4e3a\u9ed8\u8ba4\u540d\u5b57\n            remote_path = remote_path.joinpath(local_path.name)\n        sftp.put(normpath(local_path), normpath(remote_path))\n \n    return True\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u5173\u95ed",children:"\u5173\u95ed"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"sftp.close()"})}),"\n",(0,r.jsx)(n.h3,{id:"\u5c01\u88c5",children:"\u5c01\u88c5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class SSHConnection:\n    def __init__(self, host, user, password, port=22, mylogger=None):\n        self._host = host\n        self._user = user\n        self._password = password\n        self._port = port\n        self._transport = None\n        self._sftp = None\n        self._client = None\n        self.mylogger = mylogger\n        self.connect()\n\n    def connect(self):\n        # \u5bc6\u94a5\u65b9\u5f0f\n        # private = paramiko.RSAKey.from_private_key_file(\'/xxx/xxx\')\n        # transport = paramiko.Transport((self._host, self._port))\n        # transport.connect(username=self._user, pkey=private)\n\n        # \u5bc6\u7801\u8fde\u63a5\u65b9\u5f0f(\u901a\u8fc7Transport\u8fde\u63a5\uff0c\u6216\u8005\u901a\u8fc7SSHClient\u8fde\u63a5)\n        # transport \u4e00\u79cd\u52a0\u5bc6\u7684\u4f1a\u8bdd\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u52a0\u5bc6\u901a\u9053\n        transport = paramiko.Transport((self._host, self._port))\n        transport.connect(username=self._user, password=self._password)\n        self._transport = transport\n\n\n    def exec_cmd(self, commands: list) -> List:\n        """\n        :param commands: \u5f85\u6267\u884c\u547d\u4ee4\uff0c\u652f\u6301list\n        :return: \u6267\u884c\u72b6\u6001\n        """\n        # \u5b9e\u4f8b\u5316SSHClient\n        if not self._client:\n            self._client = paramiko.SSHClient()\n            self._client._transport = self._transport\n\n        status = []\n        for cmd in commands:\n            stdin, stdout, stderr = self._client.exec_command(cmd)\n            self.writer(f"start run command: {cmd}")\n            while True:\n                err, out = stderr.readline().strip(), stdout.readline().strip()\n                if not (out or err):\n                    break\n                if out:\n                    self.writer(out)\n                if err:\n                    self.writer(err, level=\'error\')\n            status.append(stdout.channel.recv_exit_status())\n        return status\n\n    def remote_path_isdir(self, remote_path):\n        """\n        \u68c0\u67e5\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55\n        :param remote_path:\n        :return:\n        """\n\n        attr = self._sftp.lstat(self.normpath(remote_path))\n        return stat.S_ISDIR(attr.st_mode)\n\n    def check_remote_path(self, remote_path, is_mkdir=False):\n        """\n        \u5224\u65ad\u76ee\u6807\u673a\u5668\u8def\u5f84\u662f\u5426\u5b58\u5728\n        :param remote_path:\n        :param is_mkdir: \u82e5\u4e3aTrue\uff0c\u5219\u4f1a\u521b\u5efa\u6b64\u8def\u5f84\n        :return:\n        """\n\n        remote_path = self.normpath(remote_path)\n        try:\n            self._sftp.lstat(remote_path)\n            return True\n        except FileNotFoundError:\n            if is_mkdir:\n                self._sftp.mkdir(remote_path)\n            else:\n                return False\n\n    @staticmethod\n    def check_local_path(local_path, is_mkdir=True):\n        """\n        \u5224\u65ad\u672c\u5730\u8def\u5f84\u662f\u5426\u5b58\u5728\n        :param local_path:\n        :param is_mkdir:\n        :return:\n        """\n        if isinstance(local_path, Path):\n            local_path = str(local_path)\n        if not os.path.exists(local_path) and is_mkdir:\n            os.makedirs(local_path)\n\n    def writer(self, message, level=None):\n        """\n        \u81ea\u5b9a\u4e49\u5199\u5165\u6587\u4ef6\u65b9\u6cd5\uff0c\u540c\u65f6\u652f\u6301logger\u6216\u6587\u4ef6\u5bf9\u8c61\n        :param message:\n        :param level:\n        :return:\n        """\n        if self.mylogger:\n            if isinstance(self.mylogger, logging.Logger):\n                if not level:\n                    self.mylogger.info(message)\n                elif level == \'error\':\n                    self.mylogger.error(message)\n                else:\n                    self.mylogger.warning(message)\n            else:\n                self.mylogger.write(message+"\\n")\n        else:\n            print(message+"\\n")\n\n\n    def get(self, remote_path, local_path):\n        """\n        \u4e0b\u8f7d\u6587\u4ef6\u6216\u76ee\u5f55\n        :param remote_path: \u76ee\u6807\u673a\u5668\u8def\u5f84\uff08\u6ce8\u610f\u8def\u5f84\u53cd\u659c\u6760\u95ee\u9898\u4f1a\u62a5\u9519\uff09\n        :param local_path:  \u672c\u5730\u8def\u5f84\n        :return:\n        """\n        if not self._sftp:\n            # \u521b\u5efa\u4e00\u4e2a\u5df2\u8fde\u901a\u7684sftp client\n            # self._sftp = paramiko.SFTPClient.from_transport(self._transport)\n            self._sftp = self._transport.open_sftp_client()\n\n        if not self.check_remote_path(remote_path):\n            self.writer(f"\u8def\u5f84\u4e0d\u5b58\u5728\uff1a{remote_path}", level=\'error\')\n            return False\n\n        local_path, remote_path = Path(local_path), Path(remote_path)\n\n        def find_files(remote_path, local_path):\n            for sftp_attr in self._sftp.listdir_attr(self.normpath(remote_path)):\n                filename = sftp_attr.filename\n                if filename.startswith(\'.\'):    # \u8fc7\u6ee4\u9690\u85cf\u6587\u4ef6\n                    continue\n\n                local_dir, remote_dir = local_path.joinpath(filename), remote_path.joinpath(filename)\n\n                # \u82e5\u4e3a\u76ee\u5f55\uff0c\u5219\u9012\u5f52\u8c03\u7528\n                if stat.S_ISDIR(sftp_attr.st_mode):     # st_mode\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u8fd8\u662f\u6587\u4ef6\uff09\n                    local_dir.mkdir(parents=True, exist_ok=True)  # parents\u4e3aTrue\u652f\u6301\u591a\u7ea7\u521b\u5efa\uff0cexist_ok \u5b58\u5728\u5c31\u4e0d\u521b\u5efa\n                    find_files(remote_dir, local_dir)\n                else:\n                    local_dir.parent.mkdir(parents=True, exist_ok=True)\n                    self._sftp.get(self.normpath(remote_dir), self.normpath(local_dir))\n                    self.writer(f"download file {remote_dir} -> {local_dir} successful!")\n\n        # \u4e0b\u8f7d\u76ee\u5f55\n        if self.remote_path_isdir(remote_path):\n            find_files(remote_path, local_path)\n\n        # \u4e0b\u8f7d\u5355\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u672c\u5730\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4e3a\u8fdc\u7a0b\u8def\u5f84\u4e2d\u7684\u540d\u5b57\n        else:\n            if local_path.is_dir():\n                local_path.mkdir(parents=True, exist_ok=True)\n                local_path = local_path.joinpath(remote_path.name)\n            else:\n                local_path.parent.mkdir(parents=True, exist_ok=True)\n            self._sftp.get(self.normpath(remote_path), self.normpath(local_path))\n            self.writer(f"download file {remote_path} -> {local_path} successful!")\n\n        return True\n\n    def put(self, local_path, remote_path):\n        if not self._sftp:\n            self._sftp = paramiko.SFTPClient.from_transport(self._transport)\n\n        local_path, remote_path = Path(local_path), Path(remote_path)\n\n        if local_path.is_dir():\n            for path in local_path.rglob(\'[!.]*\'):\n                # \u62fc\u63a5\u8fdc\u7a0b\u8def\u5f84\uff0crelative_to\u83b7\u53d6\u76f8\u5bf9\u8def\u5f84\n                remote = remote_path.joinpath(path.relative_to(local_path))\n\n                if path.is_file():\n                    self.check_remote_path(remote.parent, is_mkdir=True)   # \u76ee\u6807\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u6b64\u8def\u5f84\u9700\u8981\u521b\u5efa\n                    self._sftp.put(self.normpath(path), self.normpath(remote))\n                    self.writer(f"upload the file {path} successful!")\n\n        # \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n        else:\n            self.check_remote_path(remote_path.parent, is_mkdir=True)\n            if self.remote_path_isdir(remote_path):     # \u82e5\u8fdc\u7a0b\u8def\u5f84\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c31\u5c06\u672c\u5730\u6587\u4ef6\u540d\u4f5c\u4e3a\u9ed8\u8ba4\u540d\u5b57\n                remote_path = remote_path.joinpath(local_path.name)\n            self._sftp.put(self.normpath(local_path), self.normpath(remote_path))\n            self.writer(f"upload the file {local_path} successful!")\n\n        return True\n\n    def close(self):\n        if self._client:\n            self._client.close()\n        if self._transport:\n            self._transport.close()\n        if self._sftp:\n            self._sftp.close()\n        self._client, self._transport, self._sftp = None,  None, None\n\n    @staticmethod\n    def normpath(path):\n        """\n        \u7531\u4e8ewindows\u548clinux\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\uff0c\u8def\u5f84\u683c\u5f0f\u4f1a\u51fa\u73b0\u4e0d\u7edf\u4e00\u7684\u60c5\u51b5\uff0c\u53cd\u659c\u6760\u4e0d\u5904\u7406\u7684\u8bdd\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\n        \u66ff\u6362windows\u8def\u5f84\u4e2d\u7684\\\n        :param path:\n        :return:\n        """\n        if isinstance(path, Path):\n            path = str(path)\n        return path.replace(\'\\\\\', \'/\')\n'})}),"\n",(0,r.jsx)(n.h2,{id:"fabric",children:"fabric"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["fabric\u662f\u57fa\u4e8eparamiko\u7684\u8fdb\u4e00\u6b65\u5c01\u88c5\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\u3002fabric\u5171\u6709\u4e09\u4e2a\u7248\u672c\uff1afabric1\u3001fabric2\u3001fabric3\uff0c\u5176\u4e2dfabric3\u662f\u975e\u5b98\u65b9\u7248\u672c\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u5efa\u8bae\u4f7f\u7528fabric2\u7248\u672c\u3002",(0,r.jsx)(n.br,{}),"\n\u5b98\u65b9\u6587\u6863\uff1a",(0,r.jsx)(n.a,{href:"https://www.fabfile.org/",children:"https://www.fabfile.org/"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\u5b89\u88c5-1",children:"\u5b89\u88c5"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"pip install fabric"}),"\u6216\u8005",(0,r.jsx)(n.code,{children:"pip install fabric2"}),"\uff0c\u90fd\u662f\u5b89\u88c5\u6700\u65b0\u7684\u5b98\u65b9\u7248\u672c\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"\u4f7f\u7528",children:"\u4f7f\u7528"}),"\n",(0,r.jsx)(n.h4,{id:"\u8fde\u63a5-1",children:"\u8fde\u63a5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fabric import Connection\n\nconn = Connection(f"{user}@{host}:{port}",\n                    connect_kwargs={"password": password},\n                    connect_timeout=5,  # 5s\u8d85\u65f6\n                  )\n                  \n# \u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7528&&\u6216;\u8fde\u63a5\nconn.run("ls")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5173\u4e8e",(0,r.jsx)(n.code,{children:"run()"}),"\u65b9\u6cd5\u7684\u53c2\u6570\u8bf4\u660e\uff1a"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\u53c2\u6570"}),(0,r.jsx)(n.th,{children:"\u89e3\u91ca"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hide=True"}),(0,r.jsx)(n.td,{children:"\u670d\u52a1\u5668\u7684\u8f93\u51fa\u4fe1\u606f\u4e0d\u4f1a\u5728\u63a7\u5236\u53f0\u6253\u5370"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"warn=True"}),(0,r.jsx)(n.td,{children:"\u5ffd\u7565\u5f02\u5e38\u4fe1\u606f\uff08\u5373exit code\u4e0d\u7b49\u4e8e0\u7684\u547d\u4ee4\uff09\uff0c\u4f1a\u5c06\u5f02\u5e38\u4fe1\u606f\u8f93\u51fa\u5230stderr\uff0c\u82e5\u8bbe\u7f6eFalse\u5219\u4f1a\u62a5SystemExit\u5f02\u5e38\uff0c\u4e4b\u524d\u5728\u6d4b\u8bd5\u73af\u5883\u5c31\u662f\u56e0\u4e3a\u6ca1\u6709\u5904\u7406\u8fd9\u4e2aSystemExit\u5f02\u5e38\uff08SystemExit\u548cException\u662f\u540c\u7ea7\u5173\u7cfb\uff09\uff0c\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u5d29\u6e83"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"pty=True"}),(0,r.jsx)(n.td,{children:"\u4ea4\u4e92\u5f0f\u4f2a\u7ec8\u7aef\u65f6\u4f7f\u7528\uff0c\u5176\u4ed6\u4e0d\u5efa\u8bae\u4f7f\u7528"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"watchers"}),(0,r.jsx)(n.td,{children:"\u76d1\u542cResponder\u5217\u8868\uff0c\u81ea\u52a8\u54cd\u5e94"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"out_stream"}),(0,r.jsx)(n.td,{children:"\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bb0\u5f55\u547d\u4ee4\u8f93\u51fa\u4fe1\u606f\uff08fabric1\u7248\u672c\u7684\u53c2\u6570\u597d\u50cf\u662fstdout\uff09"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"err_stream"}),(0,r.jsx)(n.td,{children:"\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bb0\u5f55\u547d\u4ee4\u9519\u8bef\u8f93\u51fa\u4fe1\u606f"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ret = run()"}),"\u65b9\u6cd5\u8fd4\u56de\u503c\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"ret.stdout.strip()  # \u6b63\u5e38\u8f93\u51fa\nret.stderr.strip()  # \u5f02\u5e38\u8f93\u51fa\nret.failed  # \u6267\u884c\u72b6\u6001True or False\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u6267\u884c\u4ea4\u4e92\u5f0f\u547d\u4ee4",children:"\u6267\u884c\u4ea4\u4e92\u5f0f\u547d\u4ee4"}),"\n",(0,r.jsxs)(n.p,{children:["\u5982\u679c\u9700\u8981\u7528\u6237\u4e3b\u52a8\u8f93\u5165\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528Responder\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u54cd\u5e94\u7684\u5185\u5bb9\u3002\u7531\u4e8e\u4ea4\u4e92\u5f0f\u7ec8\u7aef\u539f\u56e0\uff0c\u6b64\u5904\u9700\u8981\u8bbe\u7f6e",(0,r.jsx)(n.code,{children:"pty=True"}),"\uff0c\u5426\u5219\u8fd0\u884c\u4f1a\u63d0\u793a\uff1a",(0,r.jsx)(n.code,{children:"no tty present and no askpass program specified"}),"\uff0c\u82e5\u63d0\u793a",(0,r.jsx)(n.code,{children:"xx user is not in the sudoers file.  This incident will be reported"}),"\uff0c\u9700\u8981\u901a\u8fc7\u767b\u5f55root\u7528\u6237\uff0c\u4fee\u6539sudoers\u6587\u4ef6\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u7279\u522b\u6ce8\u610f\uff1a\u6a21\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u8981\u8f6c\u4e49\uff0c\u5426\u5219\u4f1a\u5339\u914d\u4e0d\u5230\uff0c\u8fdb\u800c\u4e00\u76f4\u963b\u585e\u65e0\u54cd\u5e94\uff08\u51e1\u662f\u9700\u8981\u7528\u6237\u4ecb\u5165\u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u4e00\u76f4\u5361\u5728\u90a3\u91cc\u76f4\u5230\u7ed9\u51fa\u54cd\u5e94\uff09\uff1bresponse\u5185\u5bb9\u5fc5\u987b\u4ee5",(0,r.jsx)(n.code,{children:"\\n"}),"\u7d27\u63a5\u7ed3\u5c3e\uff0c\u76f8\u5f53\u4e8e\u8f93\u5165\u5b8c\u6210\u540e\u6267\u884c\u56de\u8f66\u64cd\u4f5c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from invoke import Responder\nfrom fabric import Connection\n\nsudopass = Responder(pattern=fr\'\\[sudo\\] password for {user}:\',\n                     response=f\'{password}\\n\',)\nconn = Connection(f"{user}@{host}:{port}", connect_kwargs={"password": password})\n# \u5982\u679c\u8981\u76d1\u542c\u591a\u4e2a\uff0c\u5219\u653e\u5165\u5217\u8868\u4e2d\u4f20\u9012\u7ed9watchers\nconn.run("sudo whoami", pty=True, watchers=[sudopass])\n'})}),"\n",(0,r.jsx)(n.p,{children:"with\u7528\u6cd5\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u6267\u884c\u5b8c\u81ea\u52a8\u5173\u95ed\nwith Connection(f"{user}@{host}:{port}", connect_kwargs={"password": password}) as c:\n    c.run("cd /home")\n    \n# with cd: \u9000\u51fawith\u4e0a\u4e0b\u6587\u4e4b\u540e\u4f1a\u56de\u5230\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684\u5bb6\u76ee\u5f55\nconn = Connection(f"{user}@{host}:{port}", connect_kwargs={"password": password})\nwith conn.cd("/home/yuqiuwen/PythonProjects/zhongxin/"): \n    # \u4ee5\u4e0b\u64cd\u4f5c\u5747\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u6267\u884c\n    ...\n    \n# with settings\u5728fabric2\u4e2d\u9057\u5f03\u4e86\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u6267\u884c\u672c\u5730\u547d\u4ee4",children:"\u6267\u884c\u672c\u5730\u547d\u4ee4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Connection.local\u65b9\u6cd5(\u5b9e\u9645\u4e0a\u662finvoke.run\u7684\u88c5\u9970\u5668)\nconn.local("dir")\n\n# \u6216\u8005invoke.run\nfrom invoke import run\n\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u64cd\u4f5c\u591a\u53f0\u673a\u5668",children:"\u64cd\u4f5c\u591a\u53f0\u673a\u5668"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from fabric import SerialGroup as Group\n\nresults = Group('web1', 'web2', 'mac1').run('uname -s')\nprint(results)\n<GroupResult: {\n    <Connection 'web1'>: <CommandResult 'uname -s'>,\n    <Connection 'web2'>: <CommandResult 'uname -s'>,\n    <Connection 'mac1'>: <CommandResult 'uname -s'>,\n}>\nfor connection, result in results.items():\n     print(\"{0.host}: {1.stdout}\".format(connection, result))\n\n\nweb1: Linux\nweb2: Linux\nmac1: Darwin\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from fabric import SerialGroup as Group\n\n# \u5f53\u76ee\u6807\u673a\u5668\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\u6267\u884c\u4e0a\u4f20\u548c\u89e3\u538b\u7f29\u64cd\u4f5c\ndef upload_and_unpack(c):\n    if c.run('test -f /opt/mydata/myfile', warn=True).failed:\n        c.put('myfiles.tgz', '/opt/mydata')\n        c.run('tar -C /opt/mydata -xzvf /opt/mydata/myfiles.tgz')\n\n# \u5982\u679c\u7528\u6237\u540d\u4e0d\u540c\u7684\u8bdd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\uff1a\n# Group('user@host1', 'user2@host2', 'user3@host3', connect_kwargs={'password': '123456'})\nfor connection in Group('host1', 'host2', 'host3', user='root', connect_kwargs={'password': '123456'}):\n    upload_and_unpack(connection)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u4e0a\u4f20\u6587\u4ef6",children:"\u4e0a\u4f20\u6587\u4ef6"}),"\n",(0,r.jsxs)(n.p,{children:["fabric\u53ea\u80fd\u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\uff0c\u6709\u4e24\u79cd\u65b9\u6848\uff1a\u672c\u5730\u6253\u5305\u4e4b\u540e\u4e0a\u4f20\uff0c\u7136\u540e\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u6267\u884c\u89e3\u538b\u64cd\u4f5c\uff0c\u6216\u8005\u901a\u8fc7\u904d\u5386\u6587\u4ef6\u5939\u5faa\u73af\u8c03\u7528get\u4e0a\u4f20\uff0c\u672c\u5730\u76ee\u5f55\u904d\u5386\u7528\u5230\u4e86",(0,r.jsx)(n.code,{children:"pathlib2.Path"}),"\u4e2d\u7684",(0,r.jsx)(n.code,{children:"rglob"}),"\u65b9\u6cd5\u3002\u6ce8\u610f\uff1a\u8fdc\u7a0b\u8def\u5f84\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'conn = Connection(f"{user}@{host}:{port}", connect_kwargs={"password": password})\nsftp = conn.sftp()\n\ndef put(local_path, remote_path):\n    local_path, remote_path = Path(local_path), Path(remote_path)\n\n    if local_path.is_dir():\n        for path in local_path.rglob(\'[!.]*\'):  # \u8fc7\u6ee4\u6389\u4ee5\u70b9\u5f00\u5934\u7684\u6587\u4ef6\n            # \u62fc\u63a5\u8fdc\u7a0b\u8def\u5f84\uff0crelative_to\u83b7\u53d6\u76f8\u5bf9\u8def\u5f84\n            remote = remote_path.joinpath(path.relative_to(local_path))\n            if path.is_file():\n                check_remote_path(remote.parent, is_mkdir=True)  # \u76ee\u6807\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u6b64\u8def\u5f84\u9700\u8981\u521b\u5efa\n                conn.put(normpath(path), normpath(remote))\n\n    # \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n    else:\n        check_remote_path(remote_path.parent, is_mkdir=True)\n        if remote_isdir(remote_path):  # \u82e5\u8fdc\u7a0b\u8def\u5f84\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c31\u5c06\u672c\u5730\u6587\u4ef6\u540d\u4f5c\u4e3a\u9ed8\u8ba4\u540d\u5b57\n            remote_path = remote_path.joinpath(local_path.name)\n        conn.put(normpath(local_path), normpath(remote_path))\n\ndef check_remote_path(remote_path, is_mkdir=False):\n    """\n    \u5224\u65ad\u76ee\u6807\u673a\u5668\u8def\u5f84\u662f\u5426\u5b58\u5728\n    :param remote_path:\n    :param is_mkdir: \u82e5\u4e3aTrue\uff0c\u5219\u4f1a\u521b\u5efa\u6b64\u8def\u5f84\n    :return:\n    """\n\n    remote_path = normpath(remote_path)\n    try:\n        sftp.lstat(remote_path)\n        return True\n    except FileNotFoundError:\n        if is_mkdir:\n            try:\n                sftp.mkdir(remote_path)\n            except PermissionError:\n                ret = conn.run(f"sudo mkdir {remote_path}", pty=True, watchers=[sudopass])\n                return not ret.failed\n        else:\n            return False\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u4e0b\u8f7d\u6587\u4ef6",children:"\u4e0b\u8f7d\u6587\u4ef6"}),"\n",(0,r.jsxs)(n.p,{children:["fabric\u4e0b\u8f7d\u6587\u4ef6\u7684\u65b9\u6cd5\u548cparamiko\u6709\u7565\u5fae\u7ec6\u8282\u5dee\u5f02\uff0cfabric\u4e0b\u8f7d\u6587\u4ef6\u65f6\u82e5\u672c\u5730\u8def\u5f84\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff0c\u5e76\u4e14\u672c\u5730\u8def\u5f84\u5982\u679c\u6ca1\u63d0\u4f9b\u6587\u4ef6\u540d\uff0c\u4f1a\u4ee5\u8fdc\u7a0b\u6587\u4ef6\u540d\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u4f46\u524d\u63d0\u662f\u672c\u5730\u8def\u5f84\u4ee5",(0,r.jsx)(n.code,{children:"/"}),"\u7ed3\u5c3e\uff0c\u5982\u679c\u6ca1\u6709",(0,r.jsx)(n.code,{children:"/"}),"\uff0c\u5c06\u4ee5\u8def\u5f84\u6700\u540e\u4e00\u90e8\u5206\u4f5c\u4e3a\u6587\u4ef6\u540d\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def traverse_remote_files(remote_path: Path, local_path: Path):\n    files_attr = sftp.listdir_attr(normpath(remote_path))\n    for file_attr in files_attr:\n        filename = file_attr.filename\n        if filename.startswith(\'.\'):  # \u8fc7\u6ee4\u4ee5\u70b9\u5f00\u5934\u7684\u76ee\u5f55\u6216\u6587\u4ef6\n            continue\n        # \u6b64\u5904\u7684local\u548cremote\u53ef\u80fd\u4e3a\u76ee\u5f55\uff0c\u4e5f\u53ef\u80fd\u4e3a\u6587\u4ef6\n        local, remote = local_path.joinpath(filename), remote_path.joinpath(filename)\n        # \u82e5\u4e3a\u76ee\u5f55\uff0c\u5219\u9012\u5f52\u8c03\u7528\n        if stat.S_ISDIR(file_attr.st_mode):  # st_mode\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u8fd8\u662f\u6587\u4ef6\uff09\n            yield from traverse_remote_files(remote, local)\n        else:\n            yield remote\n\n\ndef remote_isdir(remote_path):\n    """\n    \u68c0\u67e5\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55\n    :param remote_path:\n    :return:\n    """\n    attr = sftp.lstat(normpath(remote_path))\n    return stat.S_ISDIR(attr.st_mode)\n    \n\ndef get(remote_path, local_path):\n    local_path, remote_path = Path(local_path), Path(remote_path)\n    if remote_isdir(remote_path):\n        filepaths = traverse_remote_files(remote_path, local_path)\n        for filepath in filepaths:\n            relpath = filepath.relative_to(remote_path)\n            local = local_path.joinpath(relpath)\n\n            try:\n                conn.get(normpath(filepath), normpath(local))\n            except FileNotFoundError:\n                print("\u6587\u4ef6\u4e0d\u5b58\u5728")\n    else:\n        if not local_path.suffix:   # \u5982\u679c\u672c\u5730\u8def\u5f84\u6ca1\u6709\u63d0\u4f9b\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4e3a\u8fdc\u7a0b\u6587\u4ef6\u540d\n            local_path = local_path.joinpath(remote_path.name)\n        try:\n            conn.get(normpath(remote_path), normpath(local_path))\n        except FileNotFoundError:\n            print("\u6587\u4ef6\u4e0d\u5b58\u5728")\n'})}),"\n",(0,r.jsx)(n.h4,{id:"fab\u547d\u4ee4",children:"fab\u547d\u4ee4"}),"\n",(0,r.jsxs)(n.p,{children:["fab --help\u67e5\u770b\u5177\u4f53\u547d\u4ee4\u542b\u4e49\uff0c\u8fd9\u91cc\u5217\u4e3e\u7684\u662ffabric2\u7684\u5e38\u7528fab\u547d\u4ee4\u53c2\u6570\uff0c\u548cfabric1\u7248\u672c\u6709\u5f88\u5927\u4e0d\u540c\u3002\u5177\u4f53\u8bf7\u53c2\u8003",(0,r.jsx)(n.a,{href:"https://www.fabfile.org/upgrading.html#upgrading",children:"Upgrading from 1.x \u2014 Fabric documentation (fabfile.org)"})]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\u53c2\u6570"}),(0,r.jsx)(n.th,{children:"\u89e3\u91ca"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-l"}),(0,r.jsx)(n.td,{children:"\u5217\u4e3e\u4efb\u52a1\u5217\u8868\uff08\u88ab@task\u88c5\u9970\u7684\u51fd\u6570\u624d\u80fd\u88ab\u8bc6\u522b\uff09"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-c"}),(0,r.jsx)(n.td,{children:"\u4ece\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u5757\u540d\u52a0\u8f7d\uff08\u9ed8\u8ba4\u4e3afabfile.py\uff09"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-r"}),(0,r.jsx)(n.td,{children:"\u4ece\u6307\u5b9a\u7684\u6839\u76ee\u5f55\u8def\u5f84\u67e5\u627e\u4efb\u52a1\u6a21\u5757"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-f"}),(0,r.jsx)(n.td,{children:"\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-H"}),(0,r.jsx)(n.td,{children:"\u6307\u5b9a\u76ee\u6807\u4e3b\u673a\uff0c\u591a\u4e2a\u4e3b\u673a\u9017\u53f7\u9694\u5f00"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-V"}),(0,r.jsx)(n.td,{children:"\u663e\u793aFabric\u3001Paramiko\u3001Invoke\u7248\u672c"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-w"}),(0,r.jsx)(n.td,{children:"\u548cwarn=True\u6548\u679c\u4e00\u6837\uff0c\u51fa\u73b0\u5f02\u5e38\u4e0d\u4f1a\u7ed3\u675f"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u793a\u4f8b"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@task\ndef task1(c, param):\n    print(f"hello world, today is {param}")\n\n@task\ndef task2(c):\n    ...\n    \n# \u5982\u679c\u5165\u53e3\u6587\u4ef6\u4e3afabfile.py\uff0c\u53ef\u4ee5\u76f4\u63a5\u6267\u884c fab -H localhost task2\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5176\u4e2d\u88ab",(0,r.jsx)(n.code,{children:"@task"}),"\u88c5\u9970\u7684\u51fd\u6570\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u4f1a\u62a5\uff1a",(0,r.jsx)(n.code,{children:"TypeError: Tasks must have an initial Context argument!"}),"\u3002",(0,r.jsx)(n.br,{}),"\n\u5047\u5982\u5165\u53e3\u6587\u4ef6\u4e0d\u662ffabfile.py\u4e14\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0c\u4f1a\u62a5",(0,r.jsx)(n.code,{children:"Can't find any collection named 'fabfile'!"}),"\uff0cfabric2\u4e2d\u901a\u8fc7-c\u6765\u6307\u5b9a\u52a0\u8f7d\u7684\u4efb\u52a1\u5217\u8868\uff0c",(0,r.jsx)(n.strong,{children:"\u5b98\u65b9API\u6587\u6863\u4e5f\u8bf4\u660e\u4e86\uff1a--collection\u540e\u9762\u7684\u53c2\u6570\u662f\u6a21\u5757\u540d\u800c\u4e0d\u662f\u5177\u4f53\u6587\u4ef6\u540d"}),"\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u6bd4\u5982\u4e0a\u8ff0\u7684task\u51fd\u6570\u5b58\u5728\u4e8e\u670d\u52a1\u5668",(0,r.jsx)(n.code,{children:"/home/yuqiuwen/PythonProjects/zhongxin/fab.py"}),"\u8def\u5f84\u4e0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'"""\u901a\u8fc7\u672c\u5730\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u811a\u672c"""\n\nnow = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")\n# fabric2\u4e2d\u901a\u8fc7--\u53c2\u6570\u540d\u7684\u5f62\u5f0f\u6765\u4f20\u9012\u53d8\u91cf\u503c\uff0c\u5982\u679c\u53c2\u6570\u6709\u7a7a\u683c\uff0c\u8981\u7528\u5f15\u53f7\nconn.run(f"fab -c /home/yuqiuwen/PythonProjects/zhongxin/fab task1 --param \'{now}\'")\n# \u6216\u8005 -r\u6307\u5b9a\u67e5\u627e\u76ee\u5f55\n# conn.run(f"fab -r /home/yuqiuwen/PythonProjects/zhongxin/ -c fab task1 --param \'{now}\'")\n\n>>> output: hello world, today is 2022-10-30 14:19:23\n\n\n\n"""\u901a\u8fc7\u672c\u5730\u8c03\u7528\u672c\u5730\u7684\u811a\u672c"""\n\nfrom invoke import run\n\n# windows\u73af\u5883\u4e0b\u8c8c\u4f3c\u7ed9now\u53c2\u6570\u52a0\u5f15\u53f7\u4e5f\u4f1a\u62a5\u9519\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0\nrun(f"fab -c \u672c\u5730\u811a\u672c\u8def\u5f84 task1 --param \'{now}\'", out_stream=f, err_stream=f)\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7fab -l -F\u6307\u5b9a\u663e\u793a\u683c\u5f0f\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'> fab -r ./ -c fab  -l -F json\noutput: {"name": "fab", "help": null, "default": null, "tasks": [{"name": "task1", "help": null, "aliases": []}, {"name": "task2", "help": null, "aliases": []}], "collections": []}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\u5c01\u88c5-1",children:"\u5c01\u88c5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class FabConnection:\n    def __init__(self, host, user, password, port=22, mylogger=None):\n        self._host = host\n        self._user = user\n        self._password = password\n        self._port = port\n        self._sftp = None\n        self._conn = None\n        self.mylogger = mylogger\n        self.connect()\n\n    def connect(self):\n        # \u5bc6\u94a5\u6587\u4ef6\u65b9\u5f0f\n        # connect_kwargs={"key_filename": "/home/myuser/.ssh/private.key"},\n        conn = Connection(f"{self._user}@{self._host}:{self._port}", connect_kwargs={"password": self._password})\n        self._conn = conn\n        self._sftp = conn.sftp()\n\n    def get(self, remote_path, local_path):\n        local_path, remote_path = Path(local_path), Path(remote_path)\n\n        if self.remote_isdir(remote_path):\n            filepaths = self.traverse_remote_files(remote_path, local_path)\n            for filepath in filepaths:\n                relpath = filepath.relative_to(remote_path)\n                local = local_path.joinpath(relpath)\n\n                try:\n                    self._conn.get(self.normpath(filepath), self.normpath(local))\n                    self.writer(f"download {relpath} successful!")\n                except FileNotFoundError:\n                    self.writer(f"FileNotFoundError: {filepath} -> {local}", level=\'error\')\n\n        else:\n            if not local_path.suffix:   # \u5982\u679c\u672c\u5730\u8def\u5f84\u6ca1\u6709\u63d0\u4f9b\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4e3a\u8fdc\u7a0b\u6587\u4ef6\u540d\n                local_path = local_path.joinpath(remote_path.name)\n            try:\n                self._conn.get(self.normpath(remote_path), self.normpath(local_path))\n                self.writer(f"download {remote_path} successful!")\n            except FileNotFoundError:\n                self.writer(f"FileNotFoundError: {remote_path} -> {local_path}", level=\'error\')\n\n    def put(self, local_path, remote_path):\n        local_path, remote_path = Path(local_path), Path(remote_path)\n\n        if local_path.is_dir():\n            for path in local_path.rglob(\'[!.]*\'):\n                # \u62fc\u63a5\u8fdc\u7a0b\u8def\u5f84\uff0crelative_to\u83b7\u53d6\u76f8\u5bf9\u8def\u5f84\n                remote = remote_path.joinpath(path.relative_to(local_path))\n                if path.is_file():\n                    self.check_remote_path(remote.parent, is_mkdir=True)  # \u76ee\u6807\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u6b64\u8def\u5f84\u9700\u8981\u521b\u5efa\n                    self._conn.put(self.normpath(path), self.normpath(remote))\n                    self.writer(f"upload {path} successful!")\n\n        # \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n        else:\n            self.check_remote_path(remote_path.parent, is_mkdir=True)\n            if self.remote_isdir(remote_path):  # \u82e5\u8fdc\u7a0b\u8def\u5f84\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c31\u5c06\u672c\u5730\u6587\u4ef6\u540d\u4f5c\u4e3a\u9ed8\u8ba4\u540d\u5b57\n                remote_path = remote_path.joinpath(local_path.name)\n\n            self._conn.put(self.normpath(local_path), self.normpath(remote_path))\n            self.writer(f"upload the file {local_path} successful!")\n\n    def traverse_remote_files(self, remote_path: Path, local_path: Path):\n        files_attr = self._sftp.listdir_attr(self.normpath(remote_path))\n        for file_attr in files_attr:\n            filename = file_attr.filename\n            if filename.startswith(\'.\'):  # \u8fc7\u6ee4\u4ee5\u70b9\u5f00\u5934\u7684\u76ee\u5f55\u6216\u6587\u4ef6\n                continue\n            # \u6b64\u5904\u7684local\u548cremote\u53ef\u80fd\u4e3a\u76ee\u5f55\uff0c\u4e5f\u53ef\u80fd\u4e3a\u6587\u4ef6\n            local, remote = local_path.joinpath(filename), remote_path.joinpath(filename)\n            # \u82e5\u4e3a\u76ee\u5f55\uff0c\u5219\u9012\u5f52\u8c03\u7528\n            if stat.S_ISDIR(file_attr.st_mode):  # st_mode\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u8fd8\u662f\u6587\u4ef6\uff09\n                yield from self.traverse_remote_files(remote, local)\n            else:\n                yield remote\n\n    def close(self):\n        if self._conn:\n            self._conn.close()\n        if self._sftp:\n            self._sftp.close()\n        self._conn, self._sftp = None, None\n\n    def writer(self, message, level=None):\n        """\n        \u81ea\u5b9a\u4e49\u5199\u5165\u6587\u4ef6\u65b9\u6cd5\uff0c\u540c\u65f6\u652f\u6301logger\u6216\u6587\u4ef6\u5bf9\u8c61\n        :param message:\n        :param level:\n        :return:\n        """\n        if self.mylogger:\n            if isinstance(self.mylogger, logging.Logger):\n                if not level:\n                    self.mylogger.info(message)\n                elif level == \'error\':\n                    self.mylogger.error(message)\n                else:\n                    self.mylogger.warning(message)\n            else:\n                self.mylogger.write(message + "\\n")\n        else:\n            print(message + "\\n")\n\n    @staticmethod\n    def normpath(path):\n        """\n        \u7531\u4e8ewindows\u548clinux\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\uff0c\u8def\u5f84\u683c\u5f0f\u4f1a\u51fa\u73b0\u4e0d\u7edf\u4e00\u7684\u60c5\u51b5\uff0c\u53cd\u659c\u6760\u4e0d\u5904\u7406\u7684\u8bdd\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\n        \u66ff\u6362windows\u8def\u5f84\u4e2d\u7684\\\n        :param path:\n        :return:\n        """\n        if isinstance(path, Path):\n            path = str(path)\n        return path.replace(\'\\\\\', \'/\')\n\n    def remote_isdir(self, remote_path):\n        """\n        \u68c0\u67e5\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u662f\u5426\u4e3a\u76ee\u5f55\n        :param remote_path:\n        :return:\n        """\n        attr = self._sftp.lstat(self.normpath(remote_path))\n        return stat.S_ISDIR(attr.st_mode)\n    \n    def check_remote_path(self, remote_path, is_mkdir=False):\n        """\n        \u5224\u65ad\u76ee\u6807\u673a\u5668\u8def\u5f84\u662f\u5426\u5b58\u5728\n        :param remote_path:\n        :param is_mkdir: \u82e5\u4e3aTrue\uff0c\u5219\u4f1a\u521b\u5efa\u6b64\u8def\u5f84\n        :return:\n        """\n\n        remote_path = self.normpath(remote_path)\n        try:\n            self._sftp.lstat(remote_path)\n            return True\n        except FileNotFoundError:\n            if is_mkdir:\n                try:\n                    self._sftp.mkdir(remote_path)\n                except PermissionError:\n                    ret = self.run(f"sudo mkdir {remote_path}", pty=True, watchers=[self.sudo_pass])\n                    return not ret[2]\n            else:\n                return False\n\n    @property\n    def sudo_pass(self):\n        sudopass = Responder(pattern=fr\'[sudo] password for {self._user}:\', response=f\'{self._password}\\n\', )\n        return sudopass\n\n\n    def run(self, cmd, hide=False, warn=True, pty=False, watchers=None):\n        # hide=True\u63a7\u5236\u53f0\u4e0d\u6253\u5370\u8fd0\u884c\u4fe1\u606f\uff0c\u5f53out_stream\u4e0d\u4e3a\u7a7a\u65f6\uff0chide\u53c2\u6570\u65e0\u6548\n        ret = self._conn.run(cmd,\n                             hide=hide,\n                             warn=warn,\n                             pty=pty,\n                             out_stream=self.mylogger,\n                             err_stream=self.mylogger,\n                             watchers=watchers,\n                             encoding="utf8"\n                             )\n        stdout, stderr = ret.stdout.strip(), ret.stderr.strip()\n        return stdout, stderr, ret.failed\n\n    @property\n    def conn(self):\n        return self._conn\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var r=t(67294);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);